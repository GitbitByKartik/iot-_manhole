#include <MPU6050_tockn.h>
#include <Wire.h>
#include"dht.h"  
dht DHT;
#define dht_dpin 9
#include<LiquidCrystal.h>

#define GAS_THRESHOLD 30  // Gas Value
#define TEMP_THRESHOLD 40 // Temperature Value
#define DIST_THRESHOLD 12 // Distance Value

int trig = 7;
int echo = 8;
int gas = A3;
int temp = A2;

LiquidCrystal lcd(14, 15, 3, 4, 5, 6); //sda a4 or scl a5 p

MPU6050 mpu6050(Wire);

int i = 0;
int16_t axis_X, axis_Y, axis_Z;
int minVal = 265;
int maxVal = 402;

double x;
double y;
double z;

int pos = 0;

#define call 9
#define sms 10

unsigned long currentMillis = 0;
unsigned long previousMillis = 0;
const long interval = 2000;

unsigned long previousMillis_w = 0;
const long interval_w = 2000;

bool tilt_flag = false;
bool watr_flag = false;
bool gas_flag = false;
bool temp_flag = false;

String level,tlt;

void setup()
{
  Wire.begin();
  mpu6050.begin();

  lcd.begin(16, 2);
  lcd.print("    Manhole     ");
  lcd.setCursor(0, 1);
  lcd.print("Detection System");
  delay(1000);
  pinMode(sms, INPUT);
  pinMode(call, INPUT);
  pinMode(trig,OUTPUT);
  pinMode(echo,INPUT);
  pinMode(gas,INPUT);
  pinMode(temp,INPUT);
  Serial.begin(9600);
  gsm_init();
  send_sms("System Start");
  lcd.clear();
  lcd.print("System Ready");
  delay(2500);
}

void loop()
{
  // delay(2000);
  mpu6050.update();

  bool x_tilt = (mpu6050.getAccX() >= 0.40) or (mpu6050.getAccX() <= -0.40);
  bool y_tilt = (mpu6050.getAccY() >= 0.40) or (mpu6050.getAccY() <= -0.40);
  currentMillis = millis();
//  Serial.print("Millis:");
//  Serial.println(currentMillis - previousMillis);
  if ((currentMillis - previousMillis >= interval) and (x_tilt or y_tilt) and !tilt_flag)
  {
    lcd.clear();
    lcd.print("Tilt Detected");
    tilt_flag = true;
    send_sms("Tilt Detect");
    tlt="TILT";
  }
  if (!x_tilt and !y_tilt) // and tilt_flag) {
  {
    tilt_flag = false;
    previousMillis = currentMillis;
    tlt="NRML";
  }
  digitalWrite(trig, LOW);
  delayMicroseconds(2);
  digitalWrite(trig, HIGH);
  delayMicroseconds(10);
  digitalWrite(trig, LOW);
  delayMicroseconds(2);
  long pulse = pulseIn(echo, HIGH);
  long distance = pulse * 340 / 20000;
  //Serial.println(distance);

  if((currentMillis - previousMillis_w >= interval_w) and distance<DIST_THRESHOLD and !watr_flag){
    lcd.clear();
    lcd.print("Water Overflow");
    watr_flag = true;
    send_sms("Water Overflow");
    level = "HIGH";
  }
  if(distance>=DIST_THRESHOLD)
  {
    previousMillis_w = currentMillis;
    watr_flag = false;
    level = "NRML";
  }
 
  int gas_read = map(analogRead(gas),0,1023,0,100);
  if(gas_read>GAS_THRESHOLD and !gas_flag){
    gas_flag = true;
    send_sms("Gas Alert");
  }
  if(gas_read<=GAS_THRESHOLD)
  {
    gas_flag = false;
  }
  DHT.read11(dht_dpin);
  float cel = DHT.temperature;
  //int cel = 77-((analogRead(temp)/1024.0)*300);//mv/10; change here
  if(cel>TEMP_THRESHOLD and !temp_flag){
    temp_flag = true;
    send_sms("Temperature HIGH");
  }
  if(cel<=TEMP_THRESHOLD)
  {
    temp_flag = false;
  }
 
  //`checkSensor();
  lcd.clear();
  lcd.print("Gas:");
  lcd.print(gas_read);
  lcd.print("% Tlt:");
  lcd.print(tlt);
  lcd.setCursor(0,1);
  lcd.print("Lvl:");
  lcd.print(level);
  lcd.print(" Tmp:");
  lcd.print(int(cel));
  lcd.print("C");
}

void checkSensor()
{
  if (digitalRead(sms) == 1)
  {
    lcd.clear();
    lcd.print("Sending SMS");
    send_sms("Help Please");
    lcd.clear();
    lcd.print("System Ready");
    delay(5000);
  }

  else if (digitalRead(call) == 1)
  {
    lcd.clear();
    lcd.print("calling");
    Serial.println("AT");
    delay(500);
    Serial.println("ATD+917678830931;");
    delay(10000);
    lcd.clear();
    lcd.print("System Ready");
    delay(5000);
  }
}
void send_sms(String mg)
{
  Serial.println("AT+CMGF=1");    //select text mode
  delay(400);
  Serial.println("AT+CMGS=\"+917678830931\"");
  delay(400);
  Serial.println(mg);
  delay(400);
  Serial.write(26);                      //send msg  Ctrl+z=26
  temp = 0;
  delay(2000);                        // next reading within 20 seconds
  lcd.clear();
  lcd.print("SMS Sent");
  delay(2000);
  lcd.clear();
  lcd.print("System Ready");
  delay(5000);
}

void gsm_init()
{
  lcd.clear();
  lcd.print("Finding Module..");
  boolean at_flag = 1;
  while (at_flag)
  {
    Serial.println("AT");
    while (Serial.available() > 0)
    {
      if (Serial.find("OK"))
        at_flag = 0;
    }
    delay(1000);
  }
  Serial.println("ATE1");
  lcd.clear();
  lcd.print("Finding Network..");
  boolean net_flag = 1;
  while (net_flag)
  {
    Serial.println("AT+CPIN?");
    while (Serial.available() > 0)
    {
      if (Serial.find("READY"))
        net_flag = 0;
      break;
    }
    delay(1000);
  }
  Serial.println("AT+CNMI=2,2,0,0,0");
  delay(1000);
  Serial.println("AT+CMGF=1");
  delay(1000);
  lcd.clear();
}
